<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>wcmj 2020 課程網誌 - Misc</title><link href="./" rel="alternate"></link><link href=".%5Cfeeds/misc.atom.xml" rel="self"></link><id>./</id><updated>2020-05-22T15:00:00+08:00</updated><entry><title>2020 5/22-3 課程</title><link href=".%5C2020-Fall-5/22-3.html" rel="alternate"></link><published>2020-05-22T15:00:00+08:00</published><updated>2020-05-22T15:00:00+08:00</updated><author><name>yen</name></author><id>tag:None,2020-05-22:.\2020-Fall-5/22-3.html</id><content type="html">&lt;p&gt;查詢ip位址: ipconfig /all
i: 網際網路, p:協定, config: 設定
IPv4位址: 192.168.1.35:8000
192.168: 內部ip, python http.server預設port號: 8000, http預設port號: 80
Leo操作指令: 節點架構次序
Ctrl I: 新增節點
Ctrl R: 子節點(下一層)
Ctrl L: 母節點(上一層)
右鍵選擇 Refresh from disk: 更新資料內容(雙向)
藍色小框框: 表示此節點有資料內容&lt;/p&gt;</content><category term="Misc"></category><category term="2020FallCP"></category></entry><entry><title>2020 5/22-2 課程</title><link href=".%5C2020-Fall-5/22-2.html" rel="alternate"></link><published>2020-05-22T14:30:00+08:00</published><updated>2020-05-22T14:30:00+08:00</updated><author><name>yen</name></author><id>tag:None,2020-05-22:.\2020-Fall-5/22-2.html</id><summary type="html">&lt;p&gt;基本的工作模式:&lt;/p&gt;
&lt;p&gt;1.可以直接在 user 目錄下各組員的 leo 檔案中, 建立外部目錄 pelican/content 中的 md 檔案
2.唯一要注意的就是, 各組各週的分組報告 .md 名稱與 slug 設定, 不能互相覆寫
透過將 Jupyter 在 content/notebook/g9999 中啟動, 分組報告可以直接引用各組員所建立的 Notebook 報告檔案內容
3.各組分別完成各週的分組報告 .md 檔案後, 必須記得點按 admin pelican button, 以便產生對應的網誌內容, 否則 .md 內容不會出現在全班的 gh-pages 網誌中&lt;/p&gt;
&lt;p&gt;當 git pull origin gh-pages …&lt;/p&gt;</summary><content type="html">&lt;p&gt;基本的工作模式:&lt;/p&gt;
&lt;p&gt;1.可以直接在 user 目錄下各組員的 leo 檔案中, 建立外部目錄 pelican/content 中的 md 檔案
2.唯一要注意的就是, 各組各週的分組報告 .md 名稱與 slug 設定, 不能互相覆寫
透過將 Jupyter 在 content/notebook/g9999 中啟動, 分組報告可以直接引用各組員所建立的 Notebook 報告檔案內容
3.各組分別完成各週的分組報告 .md 檔案後, 必須記得點按 admin pelican button, 以便產生對應的網誌內容, 否則 .md 內容不會出現在全班的 gh-pages 網誌中&lt;/p&gt;
&lt;p&gt;當 git pull origin gh-pages 之後, 該如何解決遠端拉下的版本與近端的版本衝突?&lt;/p&gt;
&lt;p&gt;1.先檢查所有檔案中有7個小於符號的衝突標示字串的內容, 假入在 windows, 利用 grepwin, 假如在 Linux 使用 grep -r "查詢字串"
2.假如所有衝突都在 .html 檔案, 只要 git pull origin gh-pages 之後 ,取得近端沒有的 .md 檔案, 再執行一次 pelican 轉檔的指令 (也就是再按一次 admin-pelican 後, 再檢查是否所有 衝突標示內容都已經消失
3.確定所有 .leo 與 html 檔案內容都無衝突, 且 .leo 檔案節點可以正確開啟後, 就可以將端的版本推向遠端&lt;/p&gt;</content><category term="Misc"></category><category term="2020FallCP"></category></entry><entry><title>2020 5/22-1 課程</title><link href=".%5C2020-Fall-5/22-1.html" rel="alternate"></link><published>2020-05-22T14:00:00+08:00</published><updated>2020-05-22T14:00:00+08:00</updated><author><name>yen</name></author><id>tag:None,2020-05-22:.\2020-Fall-5/22-1.html</id><summary type="html">&lt;p&gt;"Leo is a revolutionary step in the right direction for programming."―Brian Takita
"Leo is the best IDE that I have had the pleasure to use. It has totally changed not only the way that I program, but also the way that I store and organize all of the information …&lt;/p&gt;</summary><content type="html">&lt;p&gt;"Leo is a revolutionary step in the right direction for programming."―Brian Takita
"Leo is the best IDE that I have had the pleasure to use. It has totally changed not only the way that I program, but also the way that I store and organize all of the information that I need for the job that I do."―Ian Mulvany
"When first I opened Leo, it was out of curiosity. But having used it, I'll never go back. They'll have to pry Leo out of my cold, dead fingers!"―Travers A. Hough
Leo is a PIM, IDE and outliner that accelerates the work flow of programmers, authors and web designers. Outline nodes may appear in more than one place, allowing multiple organizations of data within a single outline.&lt;/p&gt;</content><category term="Misc"></category><category term="2020FallCP"></category></entry></feed>