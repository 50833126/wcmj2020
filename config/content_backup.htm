<h1><strong>網管</strong></h1>
<h2 style="text-align: center;"><strong>Week 2 </strong></h2>
<h4>建網站</h4>
<p>此內容管理系統以 <a data-saferedirecturl="https://www.google.com/url?q=https://github.com/mdecourse/cmsimde&amp;source=gmail&amp;ust=1592028178599000&amp;usg=AFQjCNGCxQI04sDQQ-1pqf35HLfeGZAhDQ" href="https://github.com/mdecourse/cmsimde" target="_blank">https:..github.com.<wbr/>mdecourse.cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<p>利用 cmsimde 建立靜態網誌方法:</p>
<ol>
<li>在 github 建立倉儲, git clone 到近端</li>
<li>參考<a data-saferedirecturl="https://www.google.com/url?q=https://github.com/mdecourse/newcms&amp;source=gmail&amp;ust=1592028178599000&amp;usg=AFQjCNHigdzhkLimTnOsm_bMnVKhHecuMA" href="https://github.com/mdecourse/newcms" target="_blank">https:..github.com.<wbr/>mdecourse.newcms</a>, 加入除了 cmsimde 目錄外的所有內容</li>
</ol>
<p>以 git submodule add <a data-saferedirecturl="https://www.google.com/url?q=https://github.com/mdecourse/cmsimde&amp;source=gmail&amp;ust=1592028178599000&amp;usg=AFQjCNGCxQI04sDQQ-1pqf35HLfeGZAhDQ" href="https://github.com/mdecourse/cmsimde" target="_blank">https:..github.com.<wbr/>mdecourse.cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<ol start="4">
<li>之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</li>
</ol>
<p>git clone --recurse-submodules <a data-saferedirecturl="https://www.google.com/url?q=https://github.com/mdecourse/newcms.git&amp;source=gmail&amp;ust=1592028178599000&amp;usg=AFQjCNGzurHLQAwcJrayMV22yqB3CDjuMA" href="https://github.com/mdecourse/newcms.git" target="_blank">https:..<wbr/>github.com.mdecourse.newcms.<wbr/>git</a></p>
<h2 style="text-align: center;"><strong>Week 3</strong></h2>
<p>terminology 專業術語、particular 特別、technical 技術、application 應用、</p>
<p>software 軟體、hardware 硬體、firmwarre 韌體、machine language 機器語言、</p>
<p>URL:Uniform Resourse Locator  統一資源定位、command wundow 命令視窗、submodule 子模組</p>
<p>程式令:</p>
<p>Y:←指y槽 Y:\   ←表示Y槽的root根目錄 &gt; 為回應符號(prormptsign)  \ 為blackslash 反斜線 dir為顯示目錄內容的指令 cd tmp 表示change directory 到指定的目錄 git為分散式版次管理的指令名稱 git clone表示要使用git對遠端的倉儲進行clone。</p>
<h2 style="text-align: center;"><strong>Week 4</strong></h2>
<p>portable 可攜、Assembly 執行機器速度快但對硬體的相容性差、objective -c</p>
<p>→開發iphone的前一代程式、compile 編譯、interpret 解譯、unix電腦系統的一種、shell 殼、graphics 圖形、device 物件、interface 介面</p>
<p>ps.c++ →加入物件功能的C</p>
<h2 style="text-align: center;"><strong>Week 5</strong></h2>
<p>掃墓放假</p>
<h2 style="text-align: center;"><strong>Week 6</strong></h2>
<p>大致講解↓的用法和規格</p>
<p>portable obs →直播軟體</p>
<p><a data-saferedirecturl="https://www.google.com/url?q=http://meet.google.com/&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNFObNNI7PcwfhhZB-FSWJ9CkmKcOQ" href="http://meet.google.com/" target="_blank">meet.google.com</a>→google 的視訊軟體</p>
<p> </p>
<h2 style="text-align: center;"><strong>Week 7</strong></h2>
<p>abunta→遠端操控電腦、asscii 美國標準交換資訊碼。 </p>
<p>tmp&gt;wcmj2020&gt;init.py   更改網頁標題</p>
<h2 style="text-align: center;"><strong>Week 8</strong></h2>
<p>網站push的步驟</p>
<p>1.先把網站切成靜態Home</p>
<p>2.git add空格.   →意思是跟電腦說現在要讀的東西</p>
<p>3.git comit -m"add w□" →跟電腦說你要讀的東西是什麼</p>
<p>4.git push →推上動態網頁</p>
<p>讓我們實作一次分組，弄<a data-saferedirecturl="https://www.google.com/url?q=http://meet.google.com/&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNFObNNI7PcwfhhZB-FSWJ9CkmKcOQ" href="http://meet.google.com/" target="_blank">meet.google.com</a>的實際操<wbr/>作。好讓下次上課可以線上上課。</p>
<p> </p>
<p>School IPV6 : [2001:288:6004:17::53]:3128(<wbr/>42.17.7.4)</p>
<p>Port :<span> </span><a data-saferedirecturl="https://www.google.com/url?q=http://140.130.17.53:3128&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNEC8-DLUVLWQ9Ky3T7ZIZ1vEiuD8w" href="http://140.130.17.53:3128/" target="_blank">140.130.17.53:3128</a></p>
<p>inter-net == inter - national</p>
<p>(inter network)</p>
<p>protocol 協定</p>
<p>tcp/ip == transmision control protocol / internet protocol</p>
<p>transmit 傳輸</p>
<p>edition 版本(瞬時)</p>
<p>Version 版本(較大的修改)</p>
<p>router 路由器</p>
<p>route 路徑</p>
<p>remote login 遠端登入</p>
<p>client &lt;-&gt; server</p>
<p>          www</p>
<p>browser &lt;-&gt; www server</p>
<p>HTTP</p>
<p>sttp client &lt;-&gt; sttp server</p>
<h4>中華電信 DNS Server</h4>
<p>2001:b000:168::1</p>
<h4>Type of computer</h4>
<p>1.Super computer</p>
<p>2.Mainframe</p>
<p>3.Server</p>
<p>4.Personal Computer</p>
<p>5.Microcontroler</p>
<p>6.Mobile phone</p>
<p>tele 遠</p>
<p>macro 巨大 (比原子atom大)</p>
<h2 style="text-align: center;"><strong>Week 9</strong></h2>
<h4>電腦硬體架構</h4>
<p>主機螢幕周邊</p>
<p>主機:</p>
<p>主機板 MB</p>
<p>處理器 CPU</p>
<p>記憶體 RAM</p>
<p>顯示卡 GPU</p>
<p>電源供應器 PSU</p>
<p>硬碟 HDD,SSD</p>
<h4>電腦的種類</h4>
<p>Types Of Computer</p>
<p>Super Computer 超級電腦</p>
<p>MainFrame 伺服器主機</p>
<p>Server 伺服器</p>
<p>PC 個人電腦</p>
<p>Microcontroler 微控制器</p>
<p>Mobile Phone 智慧型手機</p>
<br/><br/><br/><br/><br/><strong>Week 10</strong>
<h2 style="text-align: center;"><strong>Week 11</strong></h2>
<h4>以 SSH 維護倉儲</h4>
<p>由於在電腦教室時採用純 IPv6 協定上網, 因此為了能夠在近端將倉儲改版資料推送到目前只接受 IPv4 協定連線的 github, 以下除了將原本以 https 對 github 連線, 改為以 ssh 協定連線外, 在 Windows 環境下必須利用 putty 與 plink, 設定 putty 格式的 .ppk 以及能夠同時支援 IPv4 與 IPv6 的代理主機.</p>
<p>設定步驟如下:</p>
<p>1. 下載 Putty 工具組</p>
<p>從 <a data-saferedirecturl="https://www.google.com/url?q=https://www.chiark.greenend.org.uk/~sgtatham/putty/&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNHvWous0it2JZmz8XZH0UBpcQC23A" href="https://www.chiark.greenend.org.uk/~sgtatham/putty/" rel="nofollow" target="_blank">https://www.chiark.greenend.<wbr/>org.uk/~sgtatham/putty/</a> 下載一般版, 或從 <a data-saferedirecturl="https://www.google.com/url?q=http://jakub.kotrla.net/putty/&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNEvYue9MyxNpuqLXlPIvXJmQgJnIQ" href="http://jakub.kotrla.net/putty/" rel="nofollow" target="_blank">http://jakub.kotrla.net/<wbr/>putty/</a> 下載特殊的可攜版本.</p>
<p>2. 利用 y:\portablegit\bin\sh.exe 進入 shell 命令環境後, 以 </p>
<div>
<div id="m_-4017000464414909426m_-2018323386028382460gmail-highlighter_743182">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td>
<div>1</div>
</td>
<td>
<div>
<div><code>ssh-keygen -t rsa -b 4096 -C </code><code>"使用者學號"</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>在 /y/home/.ssh 目錄下建立 id_rsa 與 id_rsa.pub 等 private key 與 public key</p>
<p>之後以 SciTE 開啟 id_rsa.pub 後, 將此 public key 的內容, 以新增添加到 Github.com 帳號下 personal settings -&gt; SSH and GPG keys 頁面下.</p>
<p>3. 接下來要利用 puttygen.exe 將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式, 並修改隨身系統的啟動批次檔案, 指定利用 putty 目錄下的 plink 執行 git 指令的網路代理設定.</p>
<div>
<div id="m_-4017000464414909426m_-2018323386028382460gmail-highlighter_905412">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td>
<div>1</div>
<div>2</div>
<div>3</div>
<div>4</div>
</td>
<td>
<div>
<div><code>修改啟動的 start.bat 加入下列設定:</code></div>
<div> </div>
<div><code>set GIT_HOME=%Disk%:\portablegit\<wbr/>bin\</code></div>
<div><code>set GIT_SSH=%Disk%:\putty\plink.<wbr/>exe</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>4. 利用 puttygen.exe 載入第二步驟所建立的 private key, 也就是 id_rsa.</p>
<p>開啟 puttygen 之後, 以右下方的 load 載入 id_rsa, 成功載入後, 利用 save private key 按鈕, 將已經轉為 putty 格式的 .ppk 存檔. 此一 .ppk 檔案必須在設定 putty 中<span> </span><a data-saferedirecturl="https://www.google.com/url?q=http://github.com&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNGty0WbkUSUIL4SfMCDrSSF5TtWjA" href="http://github.com/" target="_blank">github.com</a><span> </span>session 時, 在 Connection-&gt;SSH-&gt;Auth 項目下, 將轉檔後的 .ppk 指向 private key file for authentication 欄位. </p>
<p>並在 Connection-&gt;Proxy 項目下, 指定 Proxy type: HTTP, 並將 IPv6 代理主機設為 ::53 或 ::42 埠號設為 3128.</p>
<p>5. 之後確定 home 下的 .ssh 目錄中的 config 設定檔案為:</p>
<div>
<div id="m_-4017000464414909426m_-2018323386028382460gmail-highlighter_94557">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td>
<div>1</div>
<div>2</div>
<div>3</div>
<div>4</div>
<div>5</div>
<div>6</div>
<div>7</div>
<div>8</div>
<div>9</div>
<div>10</div>
<div>11</div>
<div>12</div>
<div>13</div>
<div>14</div>
<div>15</div>
<div>16</div>
<div>17</div>
<div>18</div>
</td>
<td>
<div>
<div><code># no proxy at home</code></div>
<div><code>#ProxyCommand y:/PortableGit/mingw64/bin/<wbr/>connect.exe -H<span> </span><a data-saferedirecturl="https://www.google.com/url?q=http://proxy.mde.nfu.edu.tw:3128&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNGPqfX6s9Km91J2BBY8MpWRXXrTPA" href="http://proxy.mde.nfu.edu.tw:3128/" target="_blank">proxy.mde.nfu.edu.tw:3128</a><span> </span>%h %p</code></div>
<div><code># set git_ssh=y:/putty/plink.exe with auth under putty<span> </span><a data-saferedirecturl="https://www.google.com/url?q=http://github.com&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNGty0WbkUSUIL4SfMCDrSSF5TtWjA" href="http://github.com/" target="_blank">github.com</a><span> </span>session setup</code></div>
<div><code>ProxyCommand y:/putty/plink.exe<span> </span><a data-saferedirecturl="https://www.google.com/url?q=http://github.com&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNGty0WbkUSUIL4SfMCDrSSF5TtWjA" href="http://github.com/" target="_blank">github.com</a><span> </span>%h %p</code></div>
<div><code> </code> </div>
<div><code>Host<span> </span><a data-saferedirecturl="https://www.google.com/url?q=http://github.com&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNGty0WbkUSUIL4SfMCDrSSF5TtWjA" href="http://github.com/" target="_blank">github.com</a></code></div>
<div><code>    </code><code>User git</code></div>
<div><code>    </code><code>Port 22</code></div>
<div><code>    </code><code>Hostname<span> </span><a data-saferedirecturl="https://www.google.com/url?q=http://github.com&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNGty0WbkUSUIL4SfMCDrSSF5TtWjA" href="http://github.com/" target="_blank">github.com</a></code></div>
<div><code>    </code> </div>
<div><code>    </code><code># for connect.exe need openssh key format</code></div>
<div><code>    </code><code>#IdentityFile "y:\home\.ssh\id_rsa_<wbr/>mdecourse"</code></div>
<div><code>    </code><code># for plink.exe need rsa key format but set under putty<span> </span><a data-saferedirecturl="https://www.google.com/url?q=http://github.com&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNGty0WbkUSUIL4SfMCDrSSF5TtWjA" href="http://github.com/" target="_blank">github.com</a><span> </span>session</code></div>
<div><code>    </code><code># plink.exe do not need the following setting</code></div>
<div><code>    </code><code>#IdentityFile "y:\home\.ssh\mdecourse_putty_<wbr/>private.ppk"</code></div>
<div><code> </code> </div>
<div><code>    </code><code>TCPKeepAlive yes</code></div>
<div><code>    </code><code>IdentitiesOnly yes</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>6. 最後再將 wcmj2020 倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連線: 範例如下:</p>
<div>
<div id="m_-4017000464414909426m_-2018323386028382460gmail-highlighter_565759">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td>
<div>1</div>
<div>2</div>
<div>3</div>
<div>4</div>
<div>5</div>
<div>6</div>
<div>7</div>
<div>8</div>
<div>9</div>
<div>10</div>
<div>11</div>
<div>12</div>
<div>13</div>
<div>14</div>
<div>15</div>
<div>16</div>
<div>17</div>
<div>18</div>
</td>
<td>
<div>
<div><code>[core]</code></div>
<div><code>    </code><code>repositoryformatversion = 0</code></div>
<div><code>    </code><code>filemode = </code><code>false</code></div>
<div><code>    </code><code>bare = </code><code>false</code></div>
<div><code>    </code><code>logallrefupdates = </code><code>true</code></div>
<div><code>    </code><code>symlinks = </code><code>false</code></div>
<div><code>    </code><code>ignorecase = </code><code>true</code></div>
<div><code>[submodule]</code></div>
<div><code>    </code><code>active = .</code></div>
<div><code>[remote </code><code>"origin"</code><code>]</code></div>
<div><code>    </code><code>#url =<span> </span><a data-saferedirecturl="https://www.google.com/url?q=https://github.com/mdecourse/wcmj2020.git&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNF0C9NPrDvN5vq1enHC9hSq0zMazA" href="https://github.com/mdecourse/wcmj2020.git" target="_blank">https://github.com/mdecourse/<wbr/>wcmj2020.git</a></code></div>
<div><code>    </code><code>url = git@github.com:mdecourse/<wbr/>wcmj2020.git</code></div>
<div><code>    </code><code>fetch = +refs/heads/*:refs/remotes/<wbr/>origin/*</code></div>
<div><code>[branch </code><code>"master"</code><code>]</code></div>
<div><code>    </code><code>remote = origin</code></div>
<div><code>    </code><code>merge = refs/heads/master</code></div>
<div><code>[submodule </code><code>"cmsimde"</code><code>]</code></div>
<div><code>    </code><code>url = https:</code><code>//<a data-saferedirecturl="https://www.google.com/url?q=http://github.com/mdecourse/cmsimde.git&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNFmmYjQNtpRbubBJhZ723jheRzAiA" href="http://github.com/mdecourse/cmsimde.git" target="_blank">github.com/mdecourse/<wbr/>cmsimde.git</a></code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>之後就可以透過近端的 .ppk private key 與 Github.com 上的 public key 對應, 無需輸入帳號密碼就可以進行 git push.</p>
<br/><br/>Blogger API
<p>基本概念:</p>
<p>1. 這裡所指的 Blogger API 為: <a data-saferedirecturl="https://www.google.com/url?q=https://developers.google.com/blogger/docs/3.0/using&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNHlgDFbWIFewbqXKIUwaZPAezB5vg" href="https://developers.google.com/blogger/docs/3.0/using" target="_blank">https://developers.google.<wbr/>com/blogger/docs/3.0/using</a></p>
<p>2. 將 CMSiMDE 中的 Pelican Blog 內容同步到 Google Blogger 的目的, 在讓網際內容管理系統中的網誌原始資料修改過程具備版次, 而且可同時將網誌出版在 Github Pages 與 Google Blogger 中, 讓網際內容的保存較具有永續性.</p>
<p>3. Google Blogger 中的網誌系統各有獨立 ID, 這裡稱為 blog_id, 而網誌中的每一篇文章各有獨立 ID, 這裡稱為 post_id.</p>
<p>4. Google Blogger 管理者登入後, 在 Settings - Permissions 項下, 允許 invite more authors, 而且在 Settings - Permissions - Blog admins and Authors 項下, 允許將所邀請共同寫作的 Author 提升為 Admin 管理者.</p>
<p>5. Google 的每一個 API 都允許使用者建立以 Oauth2 為基礎的登入使用授權憑證, 配合所啟動的各種 API 程式庫, 一旦啟用並登入後, 可以透過程式方法, 呼叫程式庫功能, 對各種 Google 所提供的服務 (Blogger, Drive, Gmail, Calendar 等) 新增內容. 以 Blogger 而言, 只要使用者被設為某一網誌的共同作者, 即擁有在該網誌新增或編輯自己所發布的網誌文章權限.</p>
<p>6. 使用者登入 Google 帳號後, 在 <a data-saferedirecturl="https://www.google.com/url?q=https://console.developers.google.com/&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNGEbAaQTMAklMLSpRwoJO3k6IITRg" href="https://console.developers.google.com/" target="_blank">https://console.developers.<wbr/>google.com</a> 中所建立的 Oauth2 client ID, 可以下載存為 client_secrets.json 檔案.</p>
<p>7. client_secrets.json 檔案則可以透過下列程式, 轉換為 credential_token.dat, 使用者針對特定啟用的 API 程式庫, 可以在讀取 credential_token.dat 的情況下, 取得與登入 Gmail 帳號相同的使用授權, 直接在擁有權限的 blog_id 中新增特定的文章 (並以特定的 post_id 辨識).</p>
<div>
<div id="m_-4017000464414909426m_-2018323386028382460gmail-highlighter_296901">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td>
<div>1</div>
<div>2</div>
<div>3</div>
<div>4</div>
<div>5</div>
<div>6</div>
<div>7</div>
<div>8</div>
<div>9</div>
<div>10</div>
<div>11</div>
<div>12</div>
<div>13</div>
<div>14</div>
<div>15</div>
<div>16</div>
<div>17</div>
<div>18</div>
<div>19</div>
<div>20</div>
<div>21</div>
<div>22</div>
<div>23</div>
<div>24</div>
</td>
<td>
<div>
<div><code>@language</code> <code>python</code></div>
<div><code>#<span> </span><a data-saferedirecturl="https://www.google.com/url?q=https://developers.google.com/blogger/docs/3.0/using&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNHlgDFbWIFewbqXKIUwaZPAezB5vg" href="https://developers.google.com/blogger/docs/3.0/using" target="_blank">https://developers.google.com/<wbr/>blogger/docs/3.0/using</a></code></div>
<div><code># under Mac command + b to execute</code></div>
<div><code>import</code> <code>pickle</code></div>
<div><code>import</code> <code>os</code></div>
<div><code>from</code> <code>googleapiclient.<wbr/>discovery </code><code>import</code> <code>build</code></div>
<div><code>from</code> <code>google_auth_oauthlib.<wbr/>flow </code><code>import</code> <code>InstalledAppFlow</code></div>
<div> </div>
<div> </div>
<div><code>SCOPES </code><code>=</code> <code>[</code><code>'<a data-saferedirecturl="https://www.google.com/url?q=https://www.googleapis.com/auth/blogger&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNG4JFQzwQXWKB7G22y-xRGLVF5lvQ" href="https://www.googleapis.com/auth/blogger" target="_blank">https://www.<wbr/>googleapis.com/auth/blogger</a>'</code><code>, ]</code></div>
<div> </div>
<div><code># we check if the file tBo store the credentials exists</code></div>
<div><code>if</code> <code>not</code> <code>os.path.exists(</code><code>'./../..<wbr/>/yen_gm_blogger_token.dat'</code><code>):</code></div>
<div> </div>
<div><code>    </code><code>flow </code><code>=</code> <code>InstalledAppFlow.<wbr/>from_client_secrets_file(</code><code>'./..<wbr/>/../yen_gm_blogger_secrets.<wbr/>json'</code><code>, SCOPES)</code></div>
<div><code>    </code><code>credentials </code><code>=</code> <code>flow.run_<wbr/>local_server()</code></div>
<div> </div>
<div><code>    </code><code>with </code><code>open</code><code>(</code><code>'./../../yen_gm_<wbr/>blogger_token.dat'</code><code>, </code><code>'wb'</code><code>) as credentials_dat:</code></div>
<div><code>        </code><code>pickle.dump(<wbr/>credentials, credentials_dat)</code></div>
<div><code>else</code><code>:</code></div>
<div><code>    </code><code>with </code><code>open</code><code>(</code><code>'./../../yen_gm_<wbr/>blogger_token.dat'</code><code>, </code><code>'rb'</code><code>) as credentials_dat:</code></div>
<div><code>        </code><code>credentials </code><code>=</code> <code>pickle.<wbr/>load(credentials_dat)</code></div>
<div><code>service </code><code>=</code> <code>build(</code><code>'blogger'</code><code>, </code><code>'<wbr/>v3'</code><code>, credentials</code><code>=</code><code>credentials)</code></div>
<div><code><a data-saferedirecturl="https://www.google.com/url?q=http://g.es&amp;source=gmail&amp;ust=1592028178600000&amp;usg=AFQjCNFTXhwb5hEq9YIT-4Ist08uJ05RyA" href="http://g.es/" target="_blank">g.es</a>(service)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<h2 style="text-align: center;"><strong>Week 12</strong></h2>
<p><a data-saferedirecturl="https://www.google.com/url?q=https://drive.google.com/open?id%3D1d_YpSrTdKLPKZjkHW2TNsbHRU1ePNRFl&amp;source=gmail&amp;ust=1592028178601000&amp;usg=AFQjCNGLuZBc_QZJAhOB1gR6J7VhLPOM3A" href="https://drive.google.com/open?id=1d_YpSrTdKLPKZjkHW2TNsbHRU1ePNRFl" target="_blank">Leo Editor 與 Pelican blog 使用說明影片</a></p>
<h2 style="text-align: center;"><strong>Week 13</strong></h2>
<p>Pelican Blog 內容與 Google Blogger 同步</p>
<p><a data-saferedirecturl="https://www.google.com/url?q=https://drive.google.com/open?id%3D1vpNOyew4ts78nuJ50-CiE26WSk0YxOV7&amp;source=gmail&amp;ust=1592028178601000&amp;usg=AFQjCNF-HDvuQZoPDma050CJEqge64fWDg" href="https://drive.google.com/open?id=1vpNOyew4ts78nuJ50-CiE26WSk0YxOV7" target="_blank">W13  利用 Leo Editor 按鈕處理同步說明影片</a></p>
<p>利用 Windows 10 設定 -&gt; 選擇預設網頁瀏覽器, 使用 Google Chrome 作為預設瀏覽器.</p>
<p>隨身程式系統必須安裝 google-api-python-<wbr/>client 與 oauth2client<br/><br/>pip install google-api-python-client oauth2client<br/><br/>OAuth 2.0 client IDs 程式類別可以選擇 other<br/><br/>使用者完成 client_secrets.json 設定後, 必須將檔案存在倉儲目錄外部</p>
<p>add_to_blogger 按鈕內容:</p>
<div>
<div id="m_-4017000464414909426m_-2018323386028382460gmail-highlighter_130744">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td>
<div>1</div>
<div>2</div>
<div>3</div>
<div>4</div>
<div>5</div>
<div>6</div>
<div>7</div>
<div>8</div>
<div>9</div>
<div>10</div>
<div>11</div>
<div>12</div>
<div>13</div>
<div>14</div>
<div>15</div>
<div>16</div>
<div>17</div>
<div>18</div>
<div>19</div>
<div>20</div>
<div>21</div>
<div>22</div>
<div>23</div>
<div>24</div>
<div>25</div>
<div>26</div>
<div>27</div>
<div>28</div>
<div>29</div>
<div>30</div>
<div>31</div>
<div>32</div>
<div>33</div>
<div>34</div>
<div>35</div>
<div>36</div>
<div>37</div>
<div>38</div>
<div>39</div>
<div>40</div>
<div>41</div>
<div>42</div>
<div>43</div>
<div>44</div>
<div>45</div>
<div>46</div>
<div>47</div>
<div>48</div>
<div>49</div>
<div>50</div>
<div>51</div>
<div>52</div>
<div>53</div>
<div>54</div>
<div>55</div>
<div>56</div>
<div>57</div>
<div>58</div>
<div>59</div>
<div>60</div>
<div>61</div>
<div>62</div>
<div>63</div>
<div>64</div>
<div>65</div>
<div>66</div>
<div>67</div>
<div>68</div>
<div>69</div>
<div>70</div>
<div>71</div>
<div>72</div>
<div>73</div>
<div>74</div>
<div>75</div>
<div>76</div>
<div>77</div>
<div>78</div>
<div>79</div>
<div>80</div>
<div>81</div>
<div>82</div>
<div>83</div>
<div>84</div>
<div>85</div>
<div>86</div>
<div>87</div>
<div>88</div>
<div>89</div>
<div>90</div>
<div>91</div>
<div>92</div>
<div>93</div>
<div>94</div>
<div>95</div>
<div>96</div>
</td>
<td>
<div>
<div><code>from</code> <code>markdown </code><code>import</code> <code>markdown</code></div>
<div><code>from</code> <code>oauth2client </code><code>import</code> <code>clien<wbr/>t</code></div>
<div><code>from</code> <code>googleapiclient </code><code>import</code> <code>sa<wbr/>mple_tools</code></div>
<div><code>import</code> <code>os</code></div>
<div> </div>
<div><code>os.environ[</code><code>'TZ'</code><code>] </code><code>=</code> <code>'Asia/<wbr/>Taipei'</code></div>
<div><code>argv </code><code>=</code> <code>""</code></div>
<div><code># 認證並建立服務</code></div>
<div><code># name of the api is "blogger", version is "v3"</code></div>
<div><code># description of the api is __doc__</code></div>
<div><code># file name of the application: location of client_secrets.json</code></div>
<div><code>service, flags </code><code>=</code> <code>sample_tools.init(</code></div>
<div><code>  </code><code>argv, </code><code>'blogger'</code><code>, </code><code>'v3'</code><code>, __doc__, </code><code>"./../../client_<wbr/>secrets.json"</code><code>,</code></div>
<div><code>  </code><code>scope</code><code>=</code><code>'<a data-saferedirecturl="https://www.google.com/url?q=https://www.googleapis.com/auth/blogger&amp;source=gmail&amp;ust=1592028178601000&amp;usg=AFQjCNF0Z9V0J6GD15_sHi_w6XFzQ7wXYA" href="https://www.googleapis.com/auth/blogger" target="_blank">https://www.<wbr/>googleapis.com/auth/blogger</a>'</code><code>)</code></div>
<div> </div>
<div> </div>
<div><code>def</code> <code>get_cat_tag_content(data):</code></div>
<div><code>    </code><code># 請注意, 因為 data 來自 .md 的檔案 內容, 第1行為 ---</code></div>
<div><code>    </code><code># 用跳行符號分割</code></div>
<div><code>    </code><code>data_list </code><code>=</code> <code>data.split(</code><code>"\<wbr/>n"</code><code>)</code></div>
<div><code>    </code><code>#第 2 行為 title</code></div>
<div><code>    </code><code>title</code><code>=</code> <code>data_list[</code><code>1</code><code>]</code></div>
<div><code>    </code><code>#第 4 行為 category</code></div>
<div><code>    </code><code>category </code><code>=</code> <code>data_list[</code><code>3</code><code>]</code></div>
<div><code>    </code><code>#第 5 行為 tags</code></div>
<div><code>    </code><code>tags </code><code>=</code> <code>data_list[</code><code>4</code><code>]</code></div>
<div><code>    </code><code># 有多項資料的 content 型別為數列</code></div>
<div><code>    </code><code># 再將第 9 行之後的資料數列串回成以跳行隔開的資料</code></div>
<div><code>    </code><code>content </code><code>=</code> <code>"\n"</code><code>.join(data_<wbr/>list[</code><code>8</code><code>:])</code></div>
<div><code>    </code><code># 先將截斷摘要與內文的 pelican md 檔按符號, 換成 Blogger 的 &lt;!--more--&gt;</code></div>
<div><code>    </code><code>content </code><code>=</code> <code>content.replace(</code><code><wbr/>'&lt;!-- PELICAN_END_SUMMARY --&gt;'</code><code>, </code><code>'&lt;!--more--&gt;'</code><code>)</code></div>
<div><code>    </code><code># 接著若內容有 ~~~python 與 ~~~ 則換成 Wordpress 格式</code></div>
<div><code>    </code><code>#content = content.replace('~~~python', '[code lang="python"]')</code></div>
<div><code>    </code><code>#content = content.replace('~~~', '[/code]')</code></div>
<div><code>    </code><code>return</code> <code>title, category, tags, content</code></div>
<div> </div>
<div><code># 從目前所在節點的 body pan 中取出類別, tags 以及文章內容</code></div>
<div><code># p.h 為 @clean filename.md</code></div>
<div><code># 因為要使用 @clean 節點掛上為後的 blogger post_id, 因此改為讀 .md 檔案</code></div>
<div><code>md_filename </code><code>=</code> <code>p.h.split(</code><code>" "</code><code>)[</code><code>1</code><code>]</code></div>
<div><code>with </code><code>open</code><code>(md_filename, </code><code>'r'</code><code>, encoding</code><code>=</code><code>"utf-8"</code><code>) as content_file:</code></div>
<div><code>    </code><code>md_content </code><code>=</code> <code>content_file.<wbr/>read()</code></div>
<div><code># title_str, category_str, tags_str, content = get_cat_tag_content(p.b)</code></div>
<div><code>title_str, category_str, tags_str, content </code><code>=</code> <code>get_cat_tag_content(<wbr/>md_content)</code></div>
<div><code>category </code><code>=</code> <code>category_str.split(</code><code><wbr/>":"</code><code>)[</code><code>1</code><code>]</code></div>
<div><code>tags </code><code>=</code> <code>tags_str.split(</code><code>":"</code><code>)[</code><code>1</code><code>].<wbr/>split(</code><code>","</code><code>)</code></div>
<div><code>tags.append(category)</code></div>
<div><code># title 是一個單獨的字串</code></div>
<div><code>title </code><code>=</code> <code>title_str.split(</code><code>":"</code><code>)[</code><code>1</code><code><wbr/>]</code></div>
<div><code># 將 markdown 格式 content 轉為 html</code></div>
<div><code>content </code><code>=</code> <code>markdown(content)</code></div>
<div><code># 以下處理 content 的 &lt;h2&gt; 標題</code></div>
<div><code>content </code><code>=</code> <code>content.replace(</code><code>"&lt;<wbr/>h2&gt;"</code><code>, </code><code>"&lt;h2&gt;&lt;font size='4'&gt;"</code><code>)</code></div>
<div><code>content </code><code>=</code> <code>content.replace(</code><code>"&lt;/<wbr/>h2&gt;"</code><code>, </code><code>"&lt;/font&gt;&lt;/h2&gt;"</code><code>)</code></div>
<div><code>#<span> </span><a data-saferedirecturl="https://www.google.com/url?q=http://g.es&amp;source=gmail&amp;ust=1592028178601000&amp;usg=AFQjCNHFcglGPSGNzaI61dTy7s12l6Qv8A" href="http://g.es/" target="_blank">g.es</a>(content)</code></div>
<div> </div>
<div><code>try</code><code>:</code></div>
<div><code>    </code><code>'''</code></div>
<div><code>    </code><code>users = service.users()</code></div>
<div><code>    </code><code># 取得使用者 profile 資料</code></div>
<div><code>    </code><code>user = users.get(userId='self').<wbr/>execute()</code></div>
<div><code>    </code><code>print('網誌名稱: %s' % user['displayName'])</code></div>
<div><code>    </code><code>'''</code></div>
<div><code>    </code><code>blogs </code><code>=</code> <code>service.blogs()</code></div>
<div><code>    </code><code># 取得使用者所建立網誌名稱</code></div>
<div><code>    </code><code>blogs </code><code>=</code> <code>blogs.listByUser(<wbr/>userId</code><code>=</code><code>'self'</code><code>).execute()</code></div>
<div><code>    </code><code># post_id is now blogs["items"][0]["id"]</code></div>
<div><code>    </code><code>blog_id </code><code>=</code> <code>blogs[</code><code>"items"</code><code>][</code><code>0</code><code><wbr/>][</code><code>"id"</code><code>]</code></div>
<div><code>    </code><code>#for blog in blogs['items']:</code></div>
<div><code>        </code><code>#print(blog['name'], blog['url'])</code></div>
<div><code>    </code><code>posts </code><code>=</code> <code>service.posts()</code></div>
<div><code>    </code><code># 新增網誌 post 時, 需要 post_id</code></div>
<div><code>    </code><code>body </code><code>=</code> <code>{</code></div>
<div><code>    </code><code>"kind"</code><code>: </code><code>"blogger#post"</code><code>,</code></div>
<div><code>    </code><code>"id"</code><code>: blog_id,</code></div>
<div><code>    </code><code>"title"</code><code>: title,</code></div>
<div><code>    </code><code># 利用 markdown 函式, 將 .md 的內文轉為 html, 作為 Blogger 的文章內容</code></div>
<div><code>    </code><code>"content"</code><code>: content,</code></div>
<div><code>    </code><code>"labels"</code><code>: tags</code></div>
<div><code>    </code><code>}</code></div>
<div><code>    </code><code>insert </code><code>=</code> <code>posts.insert(<wbr/>blogId</code><code>=</code><code>blog_id, body</code><code>=</code><code>body)</code></div>
<div><code>    </code><code>posts_doc </code><code>=</code> <code>insert.<wbr/>execute()</code></div>
<div><code>    </code><code>post_id </code><code>=</code> <code>posts_doc[</code><code>"id"</code><code>]</code></div>
<div><code>    </code><code>#print(posts_doc)</code></div>
<div><code>    </code><code>os.remove(</code><code>"blogger.dat"</code><code>)</code></div>
<div><code>    </code><code># 利用最後的 child 節點來儲存 post_id</code></div>
<div><code>    </code><code>to_save_post_id </code><code>=</code> <code>p.<wbr/>insertAsLastChild()  </code></div>
<div><code>    </code><code># 改為內文為空的節點, id 直接標在 head 標題</code></div>
<div><code>    </code><code>to_save_post_id.b </code><code>=</code> <code>""</code></div>
<div><code>    </code><code>to_save_post_id.h </code><code>=</code> <code>post_<wbr/>id</code></div>
<div><code>    </code><code># 因為新增節點, commander 必須 redraw</code></div>
<div><code>    </code><code>c.redraw()</code></div>
<div><code>    </code><code><a data-saferedirecturl="https://www.google.com/url?q=http://g.es&amp;source=gmail&amp;ust=1592028178601000&amp;usg=AFQjCNHFcglGPSGNzaI61dTy7s12l6Qv8A" href="http://g.es/" target="_blank">g.es</a>(</code><code>"post_id 為"</code><code>, post_id)</code></div>
<div><code>    </code><code><a data-saferedirecturl="https://www.google.com/url?q=http://g.es&amp;source=gmail&amp;ust=1592028178601000&amp;usg=AFQjCNHFcglGPSGNzaI61dTy7s12l6Qv8A" href="http://g.es/" target="_blank">g.es</a>(</code><code>"已經將資料送往 Blogger!"</code><code>)</code></div>
<div><code>except</code><code>(client.<wbr/>AccessTokenRefreshError):</code></div>
<div><code>    </code><code><a data-saferedirecturl="https://www.google.com/url?q=http://g.es&amp;source=gmail&amp;ust=1592028178601000&amp;usg=AFQjCNHFcglGPSGNzaI61dTy7s12l6Qv8A" href="http://g.es/" target="_blank">g.es</a>(</code><code>"error"</code><code>)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>edit_to_blogger 按鈕內容:</p>
<div>
<div id="m_-4017000464414909426m_-2018323386028382460gmail-highlighter_415508">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td>
<div>1</div>
<div>2</div>
<div>3</div>
<div>4</div>
<div>5</div>
<div>6</div>
<div>7</div>
<div>8</div>
<div>9</div>
<div>10</div>
<div>11</div>
<div>12</div>
<div>13</div>
<div>14</div>
<div>15</div>
<div>16</div>
<div>17</div>
<div>18</div>
<div>19</div>
<div>20</div>
<div>21</div>
<div>22</div>
<div>23</div>
<div>24</div>
<div>25</div>
<div>26</div>
<div>27</div>
<div>28</div>
<div>29</div>
<div>30</div>
<div>31</div>
<div>32</div>
<div>33</div>
<div>34</div>
<div>35</div>
<div>36</div>
<div>37</div>
<div>38</div>
<div>39</div>
<div>40</div>
<div>41</div>
<div>42</div>
<div>43</div>
<div>44</div>
<div>45</div>
<div>46</div>
<div>47</div>
<div>48</div>
<div>49</div>
<div>50</div>
<div>51</div>
<div>52</div>
<div>53</div>
<div>54</div>
<div>55</div>
<div>56</div>
<div>57</div>
<div>58</div>
<div>59</div>
<div>60</div>
<div>61</div>
<div>62</div>
<div>63</div>
<div>64</div>
<div>65</div>
<div>66</div>
<div>67</div>
<div>68</div>
<div>69</div>
<div>70</div>
<div>71</div>
<div>72</div>
<div>73</div>
<div>74</div>
<div>75</div>
<div>76</div>
<div>77</div>
<div>78</div>
<div>79</div>
<div>80</div>
</td>
<td>
<div>
<div><code>from</code> <code>markdown </code><code>import</code> <code>markdown</code></div>
<div><code>from</code> <code>oauth2client </code><code>import</code> <code>clien<wbr/>t</code></div>
<div><code>from</code> <code>googleapiclient </code><code>import</code> <code>sa<wbr/>mple_tools</code></div>
<div><code>import</code> <code>os</code></div>
<div> </div>
<div><code>os.environ[</code><code>'TZ'</code><code>] </code><code>=</code> <code>'Asia/<wbr/>Taipei'</code></div>
<div><code>argv </code><code>=</code> <code>""</code></div>
<div><code># 認證並建立服務</code></div>
<div><code># name of the api is "blogger", version is "v3"</code></div>
<div><code># description of the api is __doc__</code></div>
<div><code># file name of the application: location of client_secrets.json</code></div>
<div><code>service, flags </code><code>=</code> <code>sample_tools.init(</code></div>
<div><code>  </code><code>argv, </code><code>'blogger'</code><code>, </code><code>'v3'</code><code>, __doc__, </code><code>"./../../client_<wbr/>secrets.json"</code><code>,</code></div>
<div><code>  </code><code>scope</code><code>=</code><code>'<a data-saferedirecturl="https://www.google.com/url?q=https://www.googleapis.com/auth/blogger&amp;source=gmail&amp;ust=1592028178601000&amp;usg=AFQjCNF0Z9V0J6GD15_sHi_w6XFzQ7wXYA" href="https://www.googleapis.com/auth/blogger" target="_blank">https://www.<wbr/>googleapis.com/auth/blogger</a>'</code><code>)</code></div>
<div> </div>
<div> </div>
<div><code>def</code> <code>get_cat_tag_content(data):</code></div>
<div><code>    </code><code># 請注意, 因為 data 來自 .md 的檔案 內容, 第1行為 ---</code></div>
<div><code>    </code><code># 用跳行符號分割</code></div>
<div><code>    </code><code>data_list </code><code>=</code> <code>data.split(</code><code>"\<wbr/>n"</code><code>)</code></div>
<div><code>    </code><code>#第 2 行為 title</code></div>
<div><code>    </code><code>title</code><code>=</code> <code>data_list[</code><code>1</code><code>]</code></div>
<div><code>    </code><code>#第 4 行為 category</code></div>
<div><code>    </code><code>category </code><code>=</code> <code>data_list[</code><code>3</code><code>]</code></div>
<div><code>    </code><code>#第 5 行為 tags</code></div>
<div><code>    </code><code>tags </code><code>=</code> <code>data_list[</code><code>4</code><code>]</code></div>
<div><code>    </code><code># 有多項資料的 content 型別為數列</code></div>
<div><code>    </code><code># 再將第 9 行之後的資料數列串回成以跳行隔開的資料</code></div>
<div><code>    </code><code>content </code><code>=</code> <code>"\n"</code><code>.join(data_<wbr/>list[</code><code>8</code><code>:])</code></div>
<div><code>    </code><code># 先將截斷摘要與內文的 pelican md 檔按符號, 換成 Blogger 的 &lt;!--more--&gt;</code></div>
<div><code>    </code><code>content </code><code>=</code> <code>content.replace(</code><code><wbr/>'&lt;!-- PELICAN_END_SUMMARY --&gt;'</code><code>, </code><code>'&lt;!--more--&gt;'</code><code>)</code></div>
<div><code>    </code><code># 接著若內容有 ~~~python 與 ~~~ 則換成 Wordpress 格式</code></div>
<div><code>    </code><code>#content = content.replace('~~~python', '[code lang="python"]')</code></div>
<div><code>    </code><code>#content = content.replace('~~~', '[/code]')</code></div>
<div><code>    </code><code>return</code> <code>title, category, tags, content</code></div>
<div> </div>
<div><code># 從目前所在節點的 body pan 中取出類別, tags 以及文章內容</code></div>
<div><code># p.h 為 @clean filename.md</code></div>
<div><code># 因為要使用 @clean 節點掛上為後的 blogger post_id, 因此改為讀 .md 檔案</code></div>
<div><code>md_filename </code><code>=</code> <code>p.h.split(</code><code>" "</code><code>)[</code><code>1</code><code>]</code></div>
<div><code>with </code><code>open</code><code>(md_filename, </code><code>'r'</code><code>, encoding</code><code>=</code><code>"utf-8"</code><code>) as content_file:</code></div>
<div><code>    </code><code>md_content </code><code>=</code> <code>content_file.<wbr/>read()</code></div>
<div><code># title_str, category_str, tags_str, content = get_cat_tag_content(p.b)</code></div>
<div><code>title_str, category_str, tags_str, content </code><code>=</code> <code>get_cat_tag_content(<wbr/>md_content)</code></div>
<div><code>category </code><code>=</code> <code>category_str.split(</code><code><wbr/>":"</code><code>)[</code><code>1</code><code>]</code></div>
<div><code>tags </code><code>=</code> <code>tags_str.split(</code><code>":"</code><code>)[</code><code>1</code><code>].<wbr/>split(</code><code>","</code><code>)</code></div>
<div><code>tags.append(category)</code></div>
<div><code># title 是一個單獨的字串</code></div>
<div><code>title </code><code>=</code> <code>title_str.split(</code><code>":"</code><code>)[</code><code>1</code><code><wbr/>]</code></div>
<div><code># 將 markdown 格式 content 轉為 html</code></div>
<div><code>content </code><code>=</code> <code>markdown(content)</code></div>
<div><code># 以下處理 content 的 &lt;h2&gt; 標題</code></div>
<div><code>content </code><code>=</code> <code>content.replace(</code><code>"&lt;<wbr/>h2&gt;"</code><code>, </code><code>"&lt;h2&gt;&lt;font size='4'&gt;"</code><code>)</code></div>
<div><code>content </code><code>=</code> <code>content.replace(</code><code>"&lt;/<wbr/>h2&gt;"</code><code>, </code><code>"&lt;/font&gt;&lt;/h2&gt;"</code><code>)</code></div>
<div><code>#<span> </span><a data-saferedirecturl="https://www.google.com/url?q=http://g.es&amp;source=gmail&amp;ust=1592028178602000&amp;usg=AFQjCNFpGtxMznhs0j4RgRAdzNxBvVEPYQ" href="http://g.es/" target="_blank">g.es</a>(content)</code></div>
<div> </div>
<div><code>try</code><code>:</code></div>
<div><code>    </code><code>blogs </code><code>=</code> <code>service.blogs()</code></div>
<div><code>    </code><code># 取得使用者所建立網誌名稱</code></div>
<div><code>    </code><code>blogs </code><code>=</code> <code>blogs.listByUser(<wbr/>userId</code><code>=</code><code>'self'</code><code>).execute()</code></div>
<div><code>    </code><code>blog_id </code><code>=</code> <code>blogs[</code><code>"items"</code><code>][</code><code>0</code><code><wbr/>][</code><code>"id"</code><code>]</code></div>
<div><code>    </code><code># 設法取得原 post 的 id</code></div>
<div><code>    </code><code>postid_outline </code><code>=</code> <code>p.<wbr/>getLastChild()</code></div>
<div><code>    </code><code># 直接從標題取得 post 的 id 號碼</code></div>
<div><code>    </code><code>post_id </code><code>=</code> <code>postid_outline.h</code></div>
<div><code>    </code><code>posts </code><code>=</code> <code>service.posts()</code></div>
<div><code>    </code><code># 更新網誌文章時的 body</code></div>
<div><code>    </code><code>body </code><code>=</code> <code>{</code></div>
<div><code>    </code><code>"kind"</code><code>: </code><code>"blogger#post"</code><code>,</code></div>
<div><code>    </code><code>"title"</code><code>: title,</code></div>
<div><code>    </code><code>"content"</code><code>: content</code></div>
<div><code>    </code><code>}</code></div>
<div><code>    </code><code># need to save postId to outline head</code></div>
<div><code>    </code><code>update </code><code>=</code> <code>posts.update(<wbr/>blogId</code><code>=</code><code>blog_id, postId</code><code>=</code><code>post_id, body</code><code>=</code><code>body, publish</code><code>=</code><code>True</code><code>)</code></div>
<div><code>    </code><code>update_doc </code><code>=</code> <code>update.<wbr/>execute()</code></div>
<div><code>    </code><code>os.remove(</code><code>"blogger.dat"</code><code>)</code></div>
<div><code>    </code><code><a data-saferedirecturl="https://www.google.com/url?q=http://g.es&amp;source=gmail&amp;ust=1592028178602000&amp;usg=AFQjCNFpGtxMznhs0j4RgRAdzNxBvVEPYQ" href="http://g.es/" target="_blank">g.es</a>(</code><code>"post_id 為"</code><code>, post_id)</code></div>
<div><code>    </code><code><a data-saferedirecturl="https://www.google.com/url?q=http://g.es&amp;source=gmail&amp;ust=1592028178602000&amp;usg=AFQjCNFpGtxMznhs0j4RgRAdzNxBvVEPYQ" href="http://g.es/" target="_blank">g.es</a>(</code><code>"已經將更新資料送往 Blogger!"</code><code>)</code></div>
<div><code>except</code><code>(client.<wbr/>AccessTokenRefreshError):</code></div>
<div><code>    </code><code><a data-saferedirecturl="https://www.google.com/url?q=http://g.es&amp;source=gmail&amp;ust=1592028178602000&amp;usg=AFQjCNFpGtxMznhs0j4RgRAdzNxBvVEPYQ" href="http://g.es/" target="_blank">g.es</a>(</code><code>"error"</code><code>)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<h2 style="text-align: center;"><strong>Week 14</strong></h2>
<p>從 <a data-saferedirecturl="https://www.google.com/url?q=https://2019wcm.blogspot.com/2019/03/posted-via-python.html&amp;source=gmail&amp;ust=1592028178602000&amp;usg=AFQjCNGjaNzgWtBjYgKvcgI0ipoOgYEeDw" href="https://2019wcm.blogspot.com/2019/03/posted-via-python.html" target="_blank">https://2019wcm.blogspot.<wbr/>com/2019/03/posted-via-python.<wbr/>html</a> 取得Google Blogger Python API 程式, 修改後執行, 測試是否可以讀取設定的 client_secrets.json, 在各自的 Blogger ID 與 Post ID 中新增或修改網誌文章.</p>
<p><a data-saferedirecturl="https://www.google.com/url?q=https://drive.google.com/open?id%3D13KBfWIMULL9fAPw-T54cExMt9GUTW4XZ&amp;source=gmail&amp;ust=1592028178602000&amp;usg=AFQjCNEUQXNJy2Y_K7ccQAGKpnKkhQqOQw" href="https://drive.google.com/open?id=13KBfWIMULL9fAPw-T54cExMt9GUTW4XZ" target="_blank">以 Blogger Python API 程式修改文章的教學影片</a> (for @gm users only)</p>
<p><span>在leo editer 建立add_to_blogger 及edit_to_blogger 兩個按鈕</span></p>
<p>開啟blogger API服務</p>
<p>建立一個Desktop client 類型的憑證</p>
<p>並將其儲存成client_secrets.json<br/><br/><span>使用者完成 client_secrets.json 設定後, 必須將檔案存在倉儲目錄外部</span></p>
<p><span>即可使用add_to_blogger按鈕將網誌新增至google blogger</span></p>
<p>使用edit_to_blogger按鈕將更新後的網誌同步至google blogger</p>
<h2 style="text-align: center;"><b>Week 15</b></h2>
<p>做完w14以前上課內容並做完w14前的網誌</p>
<h3>About</h3>
<p><a href="http://eng.kmol.info/">http://eng.kmol.info</a><span> </span>只能在機械設計工程系的 IPv6 網段中擷取.</p>
<p>系上匿名討論區: <a href="https://eng.kmol.info:5443/kmol2020/login?g=/kmol2020/forum&amp;anon">https://eng.kmol.info:5443/kmol2020/login?g=/kmol2020/forum&amp;anon</a></p>
<p>網上公開論壇:<span> </span><a href="https://groups.google.com/a/mde.nfu.edu.tw/forum/#!forum/talk">https://groups.google.com/a/mde.nfu.edu.tw/forum/#!forum/talk</a></p>
<p>建立這個群組的主要目的:<br/><br/>    1. 透過論壇討論強化學長制的推動<br/>    2. 透過論壇討論落實理論與實作結合學習<br/>    3. 讓職場中的學長姊有機會提供經驗談<br/>    4. 配合行政單位有效推動各項政策</p>
<h1>爪與尾的印記</h1>
<p>爪</p>
<p>在力爭上游時不可或缺</p>
<p>而</p>
<p>尾</p>
<p>則是因應衝擊, 趨吉避險的重要關鍵.</p>
<p>在此, 我們即將創造出一個屬於新時代的圖騰與印記,</p>
<p><img alt="" height="499" src="http://eng.kmol.info/images/catpaw.jpg" width="500"/></p>
<p><img caption="false" height="211" src="http://eng.kmol.info/images/nfu_logo.png" width="200"/></p>
<p>準備要拿來當系學會資訊組 logo 的圖像, 希望進學校時排在尾巴的準黑手們, 也能夠不斷努力, 日日進步, 持續提升, 有朝一日在產官學界捲動屬於自己的新浪潮......</p>
<p><img alt="" height="227" src="http://eng.kmol.info/images/nfu_logo_mde.png" width="200"/></p>
<p><span color="#000000">拔</span><span color="#000000">除一切業障根本往生淨土神咒（往生咒）：</span></p>
<h6><span color="#0000ff">「南無阿彌多婆夜 哆他伽多夜 哆地夜他 阿彌利都婆毗 阿彌利哆 悉耽婆毗 阿彌利哆 毗迦蘭帝 阿彌利哆 毗迦蘭多 伽彌膩 伽伽那 枳多迦利 娑婆訶。」（二十一遍）</span></h6>
<p><span color="#000000">六字大明咒：</span></p>
<h6><span color="#0000ff">「嗡 瑪尼 悲美 吽 賀利」（至少108遍、建議1080遍以上，越多越好。）</span></h6>
<p><span style="font-size: 21.6667px;">心得</span></p>
<h6>經過這半年的坎坷，終於修成正果，學習到了很多工程師應該具備的知識和素養其中令我最印象深刻的是嚴老師不斷叮嚀的:每天花8個小時給學校、不要一直沉迷在game裡面。謝謝老師這學期的用心的教導！！！</h6>
<h6></h6>
<p><strong></strong></p>